# Send method calls via the messaging system for async processing. Set this to false to execute on
# the calling thread in a blocking fashion, for example for unit tests and when debugging
distributed.enabled = true

# Enables the scheduler which triggers processing of methods annotated with @DistributedScheduled. This
# property should only be enabled on the scheduler container, which runs in a single replica.
distributed.scheduler.enabled = false

# Enables the JMS listener to fetch messages from the queue and process them. This should only be
# enabled in the worker containers, which processes message.
spring.jms.listener.auto-startup = false

# Queue to send and read messages on
distributed.default.queue = myapp-distributed-default

# Queue to try and reprocess messages from
distributed.default.deadletter = myapp-distributed-default-deadletter

# Max number of seconds to delay messages when delay="random" (SQS supports a max of 15 minutes delay)
distributed.maxRandomDelay = 900

# Configuration for your AWS setup
aws.region = eu-west-1
aws.sqs.prefetch = 0
aws.sqs.concurrency = 10-50

# Bucket where to spill large messages (SQS supports a max of 256Kb messages)
aws.sqs.bucket = myapp-distributed-sqs

# Override the AWS API endpoint, only needed for Localstack
aws.sqs.endpoint =

# Credentials for AWS. Inject these via environment variables in a secure way, do not commit them to source control
#aws.credentials.accessKey = your access key
#aws.credentials.secretKey = your secret key
